name: 'ReSharper CLI CleanupCode'
description: 'Runs the ReSharper CLI step and checks in changes if any.'
inputs:
  solutionPath:
    required: true
    description: 'The solution file.'
  profilePath:
    required: true
    description: 'The DotSettings profile to run against the profiler.'
  gitHubToken: 
    required: true
    description: 'The personal access token for github to check in with. Cannot be default PAT or checkin will not occur.'
outputs:
    hadChanges: 
      description: "Value for if the cleanup check had changes or not. yarp for true, narp for false. Case sensitive."
      value: ${{ steps.resharper-cleanup-code-result.outputs.hadChanges }}
runs:
  using: 'composite'
  steps:
    - name: ReSharper CLI CleanupCode - Execution
      shell: bash
      run: |
        jb cleanupcode ${{ inputs.solutionPath }} --setting=${{ inputs.profilePath }}
    - name: ReSharper CLI CleanupCode - Git Status Check
      shell: bash
      run: |
        git status &> git_changes.txt
        echo "------------------------------------ Start Of git_changes.txt -----------------"
        cat git_changes.txt
        echo "------------------------------------ End Of git_changes.txt ------------------"
    - name: ReSharper CLI CleanupCode - Modification Validation
      shell: bash
      run: |        
        export linesModified=$(grep "modified:" git_changes.txt | wc -l)
        echo "Modified lines: $linesModified"
        if test $linesModified -gt 0
        then
          export CLEANUP_CHANGES=yarp
          echo "CLEANUP_CHANGES=yarp" >> $GITHUB_ENV
        else
          export CLEANUP_CHANGES=narp
          echo "CLEANUP_CHANGES=narp" >> $GITHUB_ENV
        fi
        echo "CLEANUP_CHANGES: $CLEANUP_CHANGES"
    - name: Set GITHUB_TOKEN from parameter.
      shell: bash
      run: |
         echo "GITHUB_TOKEN=${{ inputs.gitHubToken }}" >> $GITHUB_ENV
    - name: ReSharper CLI CleanupCode - Re-Commit Required
      if: env.CLEANUP_CHANGES == 'yarp'
      shell: bash
      run: |
        rm git_changes.txt
        git config --global user.name "Build Action"
        git config --global user.email "build@letsonboard.com"
        git commit -am "Automated formatting changes."
        git push
        echo "Changes were applied, build exiting to restart with cleaned up code."
    - name: ReSharper CLI CleanupCode - No Changes
      if: env.CLEANUP_CHANGES == 'narp'
      shell: bash
      run: |
        echo "No changes detected."
    - name: Set Outputs
      shell: bash
      run: |
        echo "::set-output name=hadChanges::${{env.CLEANUP_CHANGES}}"